pipeline {
    agent any
    triggers {
        pollSCM('*/1 * * * *')
        upstream(upstreamProjects: 'docker-base', threshold: hudson.model.Result.SUCCESS)
    }
    stages {
        stage('build') {
            steps {
                echo "Building node application"
            }
        }
        stage('deploy-dev') {
            steps {
                script{
                    deploy("DEV")
                }
            }
        }
        stage('test-dev') {
            steps {
                script{
                    test("DEV")
                }
            }
        }
        stage('deploy-int') {
            steps {
               script{
                    deploy("INT")
                }
            }
        }
        stage('test-int') {
            steps {
                script{
                    test("INT")
                }
            }
        }
        stage('deploy-prd') {
            steps {
                script{
                    deploy("PRD")
                }
            }
        }
        stage('test-prd') {
            steps {
                script{
                    test("PRD")
                }
            }
        }
    }
}

def deploy(String enviroment){
    echo "Deployment on ${enviroment} enviroment triggered..."
    build job: "ui-tests", parameters: [ string(name: "ENVIRONMENT", defaultValue: "DEV")]
}
def test(String enviroment){
    echo "Runing test on ${enviroment} enviroment..."
    sh "docker run -network=host -d -t --name api_test_executer_${enviroment} api_test_executer"
    sh "docker exec api_test_executer_${enviroment} cucumber --tags=@${enviroment} --format html --out test-output/report.html"
    sh "docker cp api_test_executer_${enviroment}:/usr/src/api-tests/test-output/report.html report_${enviroment}.html"
    sh "docker rm -f api_test_executor_${environment}"
}